#! /usr/bin/env ruby

require 'Qt4'
require 'vizkit'
require 'vizkittypelib'
require 'pocolog'

include Pocolog
include Orocos
Orocos.load
Orocos.load_typekit('base')
Orocos.load_typekit('corridor_planner')

# Load the sample from the log file
logfile = ARGV.shift
stream_name = ARGV.shift
logfile = Pocolog::Logfiles.open(logfile)
stream =
    if stream_name
        logfile.stream(stream_name)
    else
        logfile.streams.find { |s| s.type.name == '/corridors/Plan_m' }
    end

samples = stream.samples.to_a
if samples.empty?
    raise "no sample found"
end
data = samples.first.last

# Prepare the display and display it
widget = Vizkit.default_loader.create_widget("vizkit::QVizkitWidget")
vizkit_plugin = widget.createPlugin('corridor_planner')
vizkit_plugin.setAlpha(0.1)
vizkit_plugin.updatePlan(data)

widget.show
Vizkit.exec

